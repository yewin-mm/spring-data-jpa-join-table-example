#============================================== App Config ==============================================#
server.port=8080
server.servlet.context-path=
#we can add application path by adding "server.servlet.context-path=/User {as you want path}" properties.

# To avoid message convert exception. Without below properties, you will get httpmessge convert fail error which will response infinite data from api.
# So, above description error is User entity has Role entity and Role entity include userList which reference to User entity, two class are connect and when response one classes, it will call each others and never end loop, eg. response, user - {id, name, etc, role {id, roleName, userList {id, name, etc, role {....}}}}
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

#============================================== DB Config ==============================================#
# If you are using other db like oracle, you need to change in here as per your db config. If you don't know, pls reference in google like JPA with oracle sample.
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto create, update table
spring.jpa.hibernate.ddl-auto=update
# Need to set true for hibernate con_contextual creation because default is false  ## update - it's not need to set true after spring version 2.2.x.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#============================================== Connection pool Configs ==============================================#
# Here we can use hikari for connection pooling. Connection pooling is to control concurrent request at the same time and to get good performance when touching to db and etc.
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.auto-commit=true